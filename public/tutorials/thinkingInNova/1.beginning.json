{
    "type": "ContextFrame",
    "sideWidth": 200,
    "children": [
        {
            "type": "DragonHead",
            "title": {
                "zh": "创建第一个应用",
                "en": "Create first app"
            },
            "discription": {
                "zh": "使用Nova创建一个WebGL应用都需要实例化一个App。",
                "en": "We have to instantiate an App to create a WebGL app."
            }
        },
        {
            "type": "Paragraph",
            "title": {
                "zh": "什么是App?",
                "en": "What is App?"
            },
            "discription": {
                "zh": "App是一个WebGL程序的容器。大部分情况一个页面里面存在一个唯一的App实例。Nova也允许一个页面存在多个App，通常用于多个demo显示在一个网页中。一个App的实例包含了一个WebGL应用所有相关的东西。在App实例化前，可以根据不同业务设置配置参数。",
                "en": "App is a container of WebGL programs. There is a unique App instance in a web page in most cases. Nova also allows several App instances when there are many WebGL independent demos in a page. One App instance contains the whole things a WebGL project needs. We can set different configuration parameters according to differnet business scenes before App being instanced."
            }
        },
        {
            "type": "Paragraph",
            "discription": {
                "zh": "实例化一个App，就会生成一个WebGL渲染器，一个默认的World实例，创建逻辑循环和渲染循环管理器，一个内置的外部不能访问的requestAnimationFrame对象进行刷新操作。",
                "en": "When we instance an App, Nova will create a WebGL renderer, a default empty world, a logic and render loop manager and a requestAnimationFrame object for updating. The requestAnimationFrame object is invisible to developers."
            }
        },
        {
            "type": "Paragraph",
            "subtitle": {
                "zh": "创建App",
                "en": "Create an App"
            },
            "discription": {
                "zh": "让我们以一个最简单的例子开始：",
                "en": "Let's begin with a simplest example:"
            }
        }, {
            "type":"Tab",
            "children":[
                {
                    "tabName":{
                        "zh": "ES6开发模式",
                        "en": "ES6 development"
                    },
                    "type": "Highlight",
                    "language": "shell",
                    "code": "import * as NOVA from \"nova-three\";\n// 实例化App对象\nlet app = new NOVA.App();"
                }, {
                    "tabName":{
                        "zh": "传统网页开发",
                        "en": "traditional development"
                    },
                    "type": "Highlight",
                    "language": "shell",
                    "code": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n    <title>Empty Framework</title>\n</head>\n\n<body>\n    <script src=\"https://cdn.bootcss.com/lodash.js/4.17.5/lodash.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/96/three.min.js\"></script>\n    <script src=\"https://hypnosnova.github.io/Nova/build/nova.js\"></script>\n    <script>\n        // 实例化App对象\n        let app = new NOVA.App();\n    </script>\n</body>\n</html>"
                }
            ]
        },
        {
            "type": "Paragraph",
            "discription": {
                "zh": "上述代码列出来所有的页面代码。需要注意的是Nova依赖Lodash以及Three.js，所以在开发时如果是传统方式开发，需要用script标签引入这2个脚本。如果采用ES6语法开发，则如果没有用到Three.js和Lodash的时候不需要import进去。",
                "en": "When we instance an App, Nova will create a WebGL renderer, a default empty world, a logic and render loop manager and a requestAnimationFrame object for updating. The requestAnimationFrame object is invisible to developers."
            }
        }
    ]
}